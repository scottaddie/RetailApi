#!/bin/bash

# Generate a random number for unique resource names
instanceId=$(($RANDOM * $RANDOM))

# Constants
gitUrl=https://github.com/scottaddie/retailapi
gitBranch=master
gitRepoWorkingDirectory=~/retailapi/retail-api

# Colors
white=\033[0;37m        # White
boldPurple=\033[1;35m   # Purple
purple=\033[0;35m       # Purple

location=SouthCentralUs
resourceGroup=EfCoreModule

sqlServerName=sql$instanceId
sqlUsername=SqlUser
sqlPassword=Pass.$RANDOM
databaseName=ContosoPets

keyVaultEndpoint=vault$instanceId

connectInfo=''

# File name to hold connection information
fileName=connect.txt

# Set location
cd ~

# Download the sample project, restore NuGet packages, and build
echo Downloading code...
#git clone $gitUrl $master
echo Building code...
cd $gitRepoWorkingDirectory
#dotnet build

# Install .NET Core global tool to display connection info
dotnet tool install dotnetsay --tool-path ~/dotnetsay

# Functions
buildResults() {
    connectInfo+=$'\n'
    connectInfo+=$'\033[1;32m\033[4mConnection Info\033[0;37m (view again by running: \033[1;37mshow-connect-info)'
    connectInfo+=$'\n'

    # db connection
    connectInfo+=$'\033[1;35mDB Connection String:\033[0;37m '
    connectInfo+=$'Data Source='
    connectInfo+=$sqlServerName
    connectInfo+='.database.windows.net;Initial Catalog='
    connectInfo+=$databaseName
    connectInfo+=';User ID={0};Password={1};Connect Timeout=30;Encrypt=True;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False' 
    connectInfo+=$'\n' 
    # username 
    connectInfo+=$'\033[1;35mDB Username: \033[0;37m'
    connectInfo+=$sqlUsername 
    connectInfo+=$'\n'
    # password
    connectInfo+=$'\033[1;35mDB Password: \033[0;37m'
    connectInfo+=$sqlPassword
    connectInfo+=$'\n'
    # key vault
    connectInfo+=$'\033[1;35mKey Vault Endpoint: \033[0;37m'
    connectInfo+=$keyVaultEndpoint
    connectInfo+=$'\n'

    connectInfo+=$'\033[1;35mWeb App URL: \033[0;37m'
    connectInfo+='nada'
    connectInfo+=$'\n'

    # Set to purple for drawing .NET Bot
    connectInfo+=$'\033[1;35m'
}

# Provision Azure Resource Group
provisionResourceGroup() {
    echo Provisioning Azure Resource Group...

    az group create \
        --name $resourceGroup \
        --location $location 
    
    echo Done!
}

# Provision Azure SQL Database
provisionDatabase() {
    echo Provisioning Azure SQL Database...

    az sql server create \
        --name $sqlServerName \
        --resource-group $resourceGroup \
        --admin-user $sqlUsername \
        --admin-password $sqlPassword \
        --location $location

    az sql db create \
        --name $databaseName \
        --server $sqlServerName \
        --resource-group $resourceGroup

    az sql server firewall-rule create \
        --name AllowAzureAccess \
        --start-ip-address 0.0.0.0 \
        --end-ip-address 0.0.0.0 \
        --server $sqlServerName \
        --resource-group $resourceGroup 
    
    echo Done!
}

# Provision Azure App Service
provisionAppService() {
    echo Provisioning Azure App Service...
    echo Done!
}

# Provision Azure Key Vault
provisionKeyVault() {
    echo Provisioning Azure Key Vault...

    az keyvault create \
        --resource-group $resourceGroup \
        --name $keyVaultEndpoint \
    
    az keyvault secret set \
        --name $databaseName--Username \
        --value SqlUser \
        --vault-name $keyVaultEndpoint
    
    az keyvault secret set \
        --name $databaseName--Password \
        --value $sqlPassword \
        --vault-name $keyVaultEndpoint 

    echo Done!   
}

# Create resources
#provisionResourceGroup
#provisionDatabase
#provisionAppService
#provisionKeyVault

#writeResultsToFile

buildResults
~/dotnetsay/dotnetsay "$connectInfo"
alias show-connect-info='echo "$connectInfo"'


#END
